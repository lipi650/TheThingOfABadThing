   10 mem 1,3: graphic clr
   15 by=0
   16 dim sl&(16):dimf$(16)
   22 restore3100:forz=1to4:readsl&(z),f$(z):nextz
   30 forq=1to4:rem adjust this and data if more pictures are imported
   35 ad=$51000
   40 restore
  100 screen 0,320,200,1
  110 loadiff(f$(q))
  120 rem ------read one row of pixels-----
  200 rem -read character locations from data----
  210 for i=1to80 :rem read sides
  220 read cx
  221 read cy
  225 x=cx*8+7: y=cy*8
  230 gosub 2000
  240 next i
  250 print chr$(7)
  300 rem -read fronts- large 11x10
  310 for i=1to110
  320 read cx
  321 read cy
  325 x=cx*8+7+96: y=cy*8 : rem a 12.oszloptol kezdi
  330 gosub 2000
  340 next i
  350 print chr$(7)
  400 rem -read fronts- big 7x6
  410 for i=1to42
  420 read cx
  421 read cy
  425 x=cx*8+7+176: y=cy*8 :rem a 22.oszloptol kezdi
  430 gosub 2000
  440 next i
  450 print chr$(7)
  500 rem -read fronts- mid 5x4
  510 for i=1to20
  520 read cx
  521 read cy
  525 x=cx*8+7+224: y=cy*8 :rem a 28.oszloptol kezdi
  530 gosub 2000
  540 next i
  550 print chr$(7)
  600 rem -read fronts- smallest 3x2
  610 for i=1to6
  620 read cx
  621 read cy
  625 x=cx*8+7: y=cy*8
  630 gosub 2000
  640 next i
  650 sleep 1:  print chr$(7)
  700 rem --copy to attic ram--
  710 d=sl&(q)*2064+$8000000 :rem destination address in attic ram
  720 edma 0,2064,$51000,d :print"data is copied to attic:"d
  970 rem getkey a$
  980 screen close 0
  990 nextq:goto5000
 1000 end
 1999 rem ----------------------------------------
 2000 rem -read one char-
 2005 for r=0to7: rem read 8 rows
 2010 for p=0to7
 2020 b=b+pixel(x-p,y+r)*2^p
 2030 next p
 2040 poke ad,b :ad=ad+1
 2042 b=0
 2045 next r
 2050 return
 3000 rem -------data sides-640bytes---
 3001 data 0,0, 0,1, 0,2, 0,3, 0,4, 0,5, 0,6, 0,7, 0,8, 0,9, 0,10, 0,11
 3005 data 11,0,11,1,11,2,11,3,11,4,11,5,11,6,11,7,11,8,11,9,11,10,11,11
 3010 data 1,1, 1,2, 1,3, 1,4, 1,5, 1,6, 1,7, 1,8, 1,9, 1,10, 2,2, 2,3, 2,4, 2,5, 2,6, 2,7, 2,8, 2,9
 3015 data 9,2, 9,3, 9,4, 9,5, 9,6, 9,7, 9,8, 9,9, 10,1, 10,2, 10,3, 10,4, 10,5, 10,6, 10,7, 10,8, 10,9, 10,10
 3016 data 3,3, 3,4, 3,5, 3,6, 3,7, 3,8
 3017 data 8,3, 8,4, 8,5, 8,6, 8,7, 8,8
 3018 data 4,4, 4,5, 4,6, 4,7
 3019 data 7,4, 7,5, 7,6, 7,7
 3024 rem ------data fronts----
 3025 rem --10x11-880bytes--
 3026 data 0,0, 0,1, 0,2, 0,3, 0,4, 0,5, 0,6, 0,7, 0,8, 0,9, 0,10, 1,0, 1,1, 1,2, 1,3, 1,4, 1,5, 1,6, 1,7, 1,8, 1,9, 1,10
 3028 data 2,0, 2,1, 2,2, 2,3, 2,4, 2,5, 2,6, 2,7, 2,8, 2,9, 2,10, 3,0, 3,1, 3,2, 3,3, 3,4, 3,5, 3,6, 3,7, 3,8, 3,9, 3,10
 3030 data 4,0, 4,1, 4,2, 4,3, 4,4, 4,5, 4,6, 4,7, 4,8, 4,9, 4,10, 5,0, 5,1, 5,2, 5,3, 5,4, 5,5, 5,6, 5,7, 5,8, 5,9, 5,10
 3032 data 6,0, 6,1, 6,2, 6,3, 6,4, 6,5, 6,6, 6,7, 6,8, 6,9, 6,10, 7,0, 7,1, 7,2, 7,3, 7,4, 7,5, 7,6, 7,7, 7,8, 7,9, 7,10
 3034 data 8,0, 8,1, 8,2, 8,3, 8,4, 8,5, 8,6, 8,7, 8,8, 8,9, 8,10, 9,0, 9,1, 9,2, 9,3, 9,4, 9,5, 9,6, 9,7, 9,8, 9,9, 9,10
 3037 rem --6x7-336bytes--
 3040 data 0,0, 0,1, 0,2, 0,3, 0,4, 0,5, 0,6, 1,0, 1,1, 1,2, 1,3, 1,4, 1,5, 1,6
 3042 data 2,0, 2,1, 2,2, 2,3, 2,4, 2,5, 2,6, 3,0, 3,1, 3,2, 3,3, 3,4, 3,5, 3,6
 3044 data 4,0, 4,1, 4,2, 4,3, 4,4, 4,5, 4,6, 5,0, 5,1, 5,2, 5,3, 5,4, 5,5, 5,6
 3048 rem --5x4-160bytes--
 3050 data 0,0, 0,1, 0,2, 0,3, 0,4, 1,0, 1,1, 1,2, 1,3, 1,4
 3052 data 2,0, 2,1, 2,2, 2,3, 2,4, 3,0, 3,1, 3,2, 3,3, 3,4
 3054 rem --3x2-48bytes-- smallest front 3x2
 3056 data 5,4, 5,5, 5,6, 6,4, 6,5, 6,6
 3060 rem ---total bytes: 2064--
 3100 data1,"walls01.iff"
 3102 data2,"trees02.iff"
 3109 data9,"door09.iff"
 3110 data10,"camp10.iff"
 4999 rem 64 wallls bsave "64wallsatt", p($8000810)to p($8020400)
 5000 bsave "@16wallsatt", p($8000810)to p($8008910)
